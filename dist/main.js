"use strict";var e=require("dotenv"),t=require("mongoose"),r=require("koa");require("url");var o=require("koa-static"),n=require("koa-body"),s=require("koa-parameter"),a=require("path"),i=require("moment"),c=require("fs"),u=require("koa-router"),d=require("koa-websocket");e.config();var m=process.env;const p=t,g=new p.Schema({from:{type:p.Schema.Types.ObjectId,ref:"User"},to:{type:p.Schema.Types.ObjectId,ref:"User"},contentType:{type:String,enum:["text","image","emoji"]},content:String,timestamp:{type:Date,default:Date.now},groupId:p.Schema.Types.ObjectId});var l=p.model("Message",g);const y=t,{DB_HOST:f,DB_PROT:w,DB_NAME:S}=m;y.connect(`mongodb://${f}:${w}/${S}`);const h=y.connection;var I,b,T,q,O,k,v,$,M,_,j,D,N,U,E,A,B,J,W,C;function H(){return b?I:(b=1,I=(e,t)=>{let r=500;switch(e.code){case"10001":r=400;break;case"10002":r=409;break;default:r=500}t.status=r,t.body=e})}function x(){if(q)return T;q=1;const e=t,r=new e.Schema({groupId:String,name:String,members:[{type:e.Schema.Types.ObjectId,ref:"User"}],avatar:String,userId:String}),o=e.model("GroupMember",r);return T=o}function L(){if($)return v;$=1;const e=t,r=function(){if(k)return O;k=1;const e=t,r=e.Schema({type:{type:Number,required:!0},title:{type:String,required:!1},nickName:{type:String,required:!1},name:{type:String,required:!1},gender:{type:String,required:!1},age:{type:String,required:!1},phone:{type:String,required:!1},questionType:{type:String,required:!1},work:{type:String,required:!1},sterilization:{type:String,required:!1},deworming:{type:String,required:!1},vaccines:{type:String,required:!1},addr:{type:String,required:!1},variety:{type:String,required:!1},condition:{type:String,required:!1},article:{type:String,required:!1},question:{type:String,required:!1},imgList:[String],author:{type:e.Schema.Types.ObjectId,ref:"User"},likeUsers:{type:Array,default:[]},favoriteUsers:{type:Array,default:[]},audit:{type:Boolean,required:!1},isDelete:{type:Boolean,required:!1},likes:{type:Number,default:0},favorites:{type:Number,default:0},comments:{type:Number,default:0}},{timestamps:{createdAt:"createTime",updatedAt:"updateTime"},toJSON:{virtuals:!0},toObject:{virtuals:!0}});return r.set("toObject",{virtuals:!0}),r.set("toJSON",{virtuals:!0}),O=e.model("article",r)}(),o=e.Schema({account:{required:!0,type:String},username:{required:!0,type:String},password:{required:!0,type:String},isAdmin:{type:Number,enum:[1,0],default:""},avatar:{type:String}},{timestamps:{createdAt:"createTime",updatedAt:"updateTime"},toJSON:{virtuals:!0},toObject:{virtuals:!0}});return o.virtual("myArticleNum",{ref:r,localField:"_id",foreignField:"author",count:!0,match:e=>({author:e._id,audit:!0})}),v=e.model("User",o)}function F(){if(U)return N;U=1;const e=i,r=t.Types.ObjectId,o=L(),n=l,s=function(){if(_)return M;_=1;const e=t,r=new e.Schema({userId:String,socketId:String}),o=e.model("UserWebSocketMap",r);return M=o}(),a=function(){if(D)return j;D=1;const e=t,r=new e.Schema({from:e.Schema.Types.ObjectId,to:e.Schema.Types.ObjectId,read:{type:Boolean,default:!1},connectionType:{type:String,enum:["oneToOne","group"]},contentType:{type:String,enum:["text","image","emoji"]},content:String,timestamp:{type:Date,default:Date.now},groupId:e.Schema.Types.ObjectId}),o=e.model("OfflineMessage",r);return j=o}(),c=x(),u=new Map;async function d(e,t){e.query.userId,e.websocket.send(JSON.stringify({type:"welcome",content:"Welcome to the chat!"})),await t()}async function m(e){console.log("findWebSocketByUserId -- id",e);try{const t=await s.findOne({userId:e});return t?u.get(t.socketId):null}catch(e){console.log("findWebSocketByUserId--error",e)}}async function p({connectionType:e,toId:t,userId:n,groupId:s},i){if("oneToOne"===e){(await a.aggregate([{$match:{$or:[{from:new r(n),to:new r(t)},{from:new r(t),to:new r(n)}],$and:[{read:!1},{connectionType:"oneToOne"}]}}])).forEach((async e=>{await a.updateOne({_id:e._id},{read:!0})}))}if("group"===e){(await a.find({groupId:new r(s),connectionType:"group"})).forEach((async e=>{await a.updateOne({_id:e._id},{read:!0}),await e.save()}))}await o.updateOne({_id:t},{online:!0})}function g(e){const t=new Date(e),r=new Date;return r.setHours(0,0,0,0),t<r}return N={clienWs:async(e,t)=>{try{console.log("userId",e.query.userId),console.log("socketId",e.query.socketId),e.user=await o.findById(e.query.userId),e.user?(e.websocket.send("连接成功"),u.set(e.query.socketId,e.websocket),await t()):(e.websocket.send(JSON.stringify({error:"Unauthorized"})),e.websocket.close())}catch(e){console.log("clienWs - error",e)}},saveWsConnection:async(e,t)=>{const r=e.user.id,o=e.query.socketId;r&&o&&await s.findOneAndUpdate({userId:r},{socketId:o},{upsert:!0}),await t()},handleMsg:async(t,s)=>{d(t,s),t.websocket.on("message",(async s=>{const i=JSON.parse(s),{connectionType:u}=i;switch(u){case"messageList":await async function(t,s){try{const i=new r(t),u=await n.find({$or:[{from:i},{to:i}]}).sort({timestamp:-1}),d=await c.find({members:{$in:[i]}}),m=await a.find({to:t,read:!1}).sort({timestamp:-1}),p=u.concat(d).concat(m).sort(((e,t)=>t.timestamp-e.timestamp)),l=new Map;p.forEach((e=>{const{from:r,to:o,_id:n}=e,s=r||o?r.toString()===t?o?.toString():r?.toString():n.toString();l.has(s)||l.set(s,{messages:[],offlineMessagesCount:0}),l.get(s).messages.push({chat:e,type:e.to?"onToOne":"group"}),e instanceof a&&(e.to&&e.to.toString()===t||e.groupId&&e.groupId.toString()===t)&&l.get(s).offlineMessagesCount++}));const y=[];for(const[t,r]of l){const n=r.messages[0];if("onToOne"===n.type){const s=await o.findById(t),a=n.chat.timestamp,i=g(a)?e(a).format("MM-DD"):e(a).format("HH:mm");s&&y.push({user:s,latestMessage:{...n.chat.toObject(),time:i},offlineMessagesCount:r.offlineMessagesCount})}else{const o=await c.findById(t),s=n.chat.timestamp,a=g(s)?e(s).format("MM-DD"):e(s).format("HH:mm");o&&y.push({groupInfo:o,latestMessage:{...n.chat.toObject(),time:a},offlineMessagesCount:r.offlineMessagesCount})}}return s.send(JSON.stringify({connectionType:"messageList",result:y}))}catch(e){return console.error("Error getting recent messages with users:",e),s.send(JSON.stringify({connectionType:"messageList",result:[]}))}}(t.user.id,t.websocket);break;case"history":await async function({userId:e,toId:t,groupId:o},s){try{let a=[];if(e&&t){const o=new r(e),i=new r(t);await p({connectionType:"oneToOne",toId:t,userId:e},s),a=await n.aggregate([{$match:{$or:[{from:o,to:i},{from:i,to:o}]}},{$addFields:{time:{$cond:{if:{$gte:["$timestamp",new Date((new Date).setUTCHours(0,0,0,0))]},then:{$dateToString:{format:"%H:%M:%S",date:{$toDate:{$toLong:"$timestamp"}},timezone:"Asia/Shanghai"}},else:{$dateToString:{format:"%Y-%m-%d",date:{$toDate:{$toLong:"$timestamp"}},timezone:"Asia/Shanghai"}}}}}},{$sort:{timestamp:1}}])}else{if(!o)throw new Error("Must provide either userId or groupId");await p({connectionType:"group",groupId:o},s),a=await n.aggregate([{$match:{groupId:new r(o)}},{$lookup:{from:"users",localField:"from",foreignField:"_id",as:"userInfo"}},{$unwind:"$userInfo"},{$project:{_id:1,groupId:1,from:1,content:1,contentType:1,timestamp:1,"userInfo._id":1,"userInfo.account":1,"userInfo.username":1,"userInfo.avatar":1}},{$sort:{timestamp:1}}])}return s.send(JSON.stringify({connectionType:"history",result:a}))}catch(e){return console.error("Error getting chat history:",e),s.send(JSON.stringify({connectionType:"history",result:[]}))}}(i,t.websocket);break;case"oneToOne":!function(e){const{from:t,to:r,contentType:o,content:s}=e,i=new n({from:t,to:r,contentType:o,content:s,timestamp:Date.now()});i.save().then((async()=>{const t=await m(r);console.log("receiverWebSocket",t),t?t.send(JSON.stringify({connectionType:"oneToOne",result:e})):async function(e){const t=new a(e);await t.save()}({...e,connectionType:"oneToOne"})})).catch((e=>{console.error("Error saving message:",e)}))}(i);break;case"group":!function(e){const{from:t,groupId:r,contentType:o,content:s}=e,i=new n({from:t,groupId:r,connectionType:"group",contentType:o,content:s});i.save().then((async()=>{const n=await async function(e){try{return await c.find({_id:e})}catch(e){return console.error("Error finding group members:",e),[]}}(r);n.forEach((async({members:n})=>{n.forEach((async n=>{const i=await m(n);if(i)i.send(JSON.stringify(e));else{new a({groupId:r,from:t,to:n,connectionType:"group",contentType:o,content:s}).save().catch((e=>{console.error("Error saving offline message:",e)}))}}))}))})).catch((e=>{console.error("Error saving message:",e)}))}(i);break;default:console.log("Unknown connection type:",u)}}))},sendOfflineMessages:d},N}function G(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}function P(){if(C)return W;C=1;const e=r,t=o,i=H(),{koaBody:m}=n,p=s,g=a,{wsServer:y}=function(){if(A)return E;A=1;const e=l,t=x(),{clienWs:r,saveWsConnection:o,handleMsg:n}=F();return E={wsServer:e=>{console.log("wsServer"),e.ws.use(r),e.ws.use(o),e.ws.use(n)},list:async(e,t)=>{try{const t=e.request.params.id;console.log("id",t);const r=await getRecentMessagesWithUsers(t);console.log("list",r),e.body={code:200,message:"请求成功",result:r}}catch(t){console.log("message-list-error:",t),e.body({code:500,message:"请求失败",result:null})}},createGroup:async(r,o)=>{try{const{userId:o,groupName:n,avatar:s}=r.request.body,a=new t({name:n,avatar:s,members:[o]});await a.save(),new e({from:o,groupId:a._id,connectionType:"group",contentType:"text",content:"欢迎加入"}).save(),r.body={code:200,message:"创建成功",result:a}}catch(e){console.log("createGroup-error",e),r.body({code:500,message:"创建失败",result:null})}},joinGroup:async(e,r)=>{try{const{groupId:r,userId:o}=e.request.body;await t.findByIdAndUpdate(r,{$addToSet:{members:o}}),e.body={code:200,message:"加入成功",result:{groupId:r,userId:o}}}catch(t){console.log("joinGroup-error",t),e.body({code:500,message:"加入群聊失败",result:null})}}},E}(),f=function(){if(J)return B;J=1;const e=c,t=new u,r=e.readdirSync(__dirname);for(const e of r)if("index.js"!==e){const r=G(`./${e}`);t.use(r.routes())}return B=t}(),w=d(new e);return w.use(m({multipart:!0,formidable:{uploadDir:g.join(__dirname,"../../public/upload"),keepExtensions:!0,multiples:!0}})),w.use(t(g.join(__dirname,"../../public"))),w.use(p(w)),y(w),w.use(f.routes()).use(f.allowedMethods()),w.on("error",i),W=w}const{APP_HOST_PORT:R}=m;((e,t)=>{"function"!=typeof t&&(t=()=>{console.log("mongodb error  数据库连接失败")}),h.once("open",(()=>{console.log("数据库链接成功"),e()})),h.on("error",(()=>{t()}))})((()=>{P().listen(R,(()=>{console.log("server in running",R)}))})),module.exports={};
